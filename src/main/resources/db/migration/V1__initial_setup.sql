create table projects
(
    id          bigint generated by default as identity
        primary key,
    uuid        uuid         not null
        unique,
    description text,
    key         varchar(255) not null,
    title       varchar(255) not null
);

create table users
(
    id       bigint generated by default as identity
        primary key,
    uuid     uuid         not null
        unique,
    email    varchar(255) not null
        unique,
    name     varchar(255) not null,
    password varchar(255) not null,
    enabled  boolean      not null
);

create table verification_token
(
    expiry_date timestamp(6) with time zone not null,
    id          bigint generated by default as identity
        primary key,
    user_id     bigint                      not null
        unique
        references users,
    token       varchar(255)                not null
);

create table refresh_token
(
    expiry_date timestamp(6) with time zone not null,
    id          bigint generated by default as identity
        primary key,
    user_id     bigint                      not null
        unique
        references users,
    token       varchar(255)                not null
);

create table tasks
(
    id           bigint generated by default as identity
        primary key,
    project_id   bigint       not null
        references projects
        on delete cascade,
    author_id    uuid         not null,
    executor_id  uuid,
    uuid         uuid         not null
        unique,
    created_date varchar(255) not null,
    description  text,
    key          varchar(255) not null,
    priority     varchar(255) not null
        constraint tasks_priority_check
            check ((priority)::text = ANY
        ((ARRAY ['LOW'::character varying, 'MEDIUM'::character varying, 'HIGH'::character varying, 'CRITICAL'::character varying])::text[])),
    status       varchar(255) not null
        constraint tasks_status_check
            check ((status)::text = ANY
                   ((ARRAY ['OPEN'::character varying, 'IN_PROGRESS'::character varying, 'REVIEW'::character varying, 'TESTING'::character varying, 'COMPLETE'::character varying])::text[])),
    title        varchar(255) not null,
    type         varchar(255) not null
        constraint tasks_type_check
            check ((type)::text = ANY
                   ((ARRAY ['EPIC'::character varying, 'BUG'::character varying, 'TASK'::character varying, 'STORY'::character varying, 'SUBTASK'::character varying])::text[])),
    updated_date varchar(255)
);

create table projects_to_users
(
    id         bigint generated by default as identity
        primary key,
    project_id bigint       not null
        references projects,
    user_id    bigint       not null
        references users,
    role       varchar(255) not null
        constraint projects_to_users_role_check
            check ((role)::text = ANY ((ARRAY ['ADMIN'::character varying, 'DEVELOPER'::character varying])::text[]))
    );